{#
 # The MIT License (MIT)
 #
 # Copyright (c) 2020 Philippe Proulx <pproulx@efficios.com>
 #
 # Permission is hereby granted, free of charge, to any person obtaining
 # a copy of this software and associated documentation files (the
 # "Software"), to deal in the Software without restriction, including
 # without limitation the rights to use, copy, modify, merge, publish,
 # distribute, sublicense, and/or sell copies of the Software, and to
 # permit persons to whom the Software is furnished to do so, subject to
 # the following conditions:
 #
 # The above copyright notice and this permission notice shall be
 # included in all copies or substantial portions of the Software.
 #
 # THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 # EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 # MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 # IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 # CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 # TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 # SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 #}

{#
 # Common variables and macros (for C templates).
 #}

{% import 'common.j2' as common %}

{# generic barectf context structure name #}
{% set ctx_struct_name %}{{ common.prefix }}ctx{% endset %}

{#
 # Generates the name of a tracing function for the stream type
 # `stream_type` and the event type `ev_type`.
 #
 # Example:
 #
 #     barectf_my_stream_trace_my_event
 #}
{% macro trace_func_name(stream_type, ev_type) %}
{{ common.prefix }}{{ stream_type.name }}_trace_{{ ev_type.name }}
{%- endmacro %}

{#
 # Generates the name of a source variable from the names of the
 # operation `op`.
 #
 # Example:
 #
 #     ep_msg_id
 #}
{% macro op_src(op) %}
{{ op.names | join('_') }}
{%- endmacro %}
